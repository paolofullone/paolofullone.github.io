<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dotnet on Paolo Fullone</title>
    <link>http://localhost:1313/tags/dotnet/</link>
    <description>Recent content in Dotnet on Paolo Fullone</description>
    <generator>Hugo</generator>
    <language>en</language>
    <managingEditor>paolo.enrico@gmail.com (home)</managingEditor>
    <webMaster>paolo.enrico@gmail.com (home)</webMaster>
    <lastBuildDate>Thu, 10 Apr 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/dotnet/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>RunningTracker</title>
      <link>http://localhost:1313/post/2025-04-10-runningtracker/</link>
      <pubDate>Thu, 10 Apr 2025 00:00:00 +0000</pubDate><author>paolo.enrico@gmail.com (home)</author>
      <guid>http://localhost:1313/post/2025-04-10-runningtracker/</guid>
      <description>&lt;p&gt;This project is a RESTful API to track amateur running activities.&lt;/p&gt;&#xA;&lt;p&gt;I did it because I am an amateur runner.&lt;/p&gt;&#xA;&lt;p&gt;So, the API itself was not a work challenge, it was more a fun project to do in my free time. But I also took the opportunity to perform all tests I know and provided a detailed explanation of each in the README in &lt;a href=&#34;https://github.com/paolofullone/RunningTracker&#34;&gt;Github&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;If you have something to share or discuss about the project, please feel free to reach out and we can have a chat.&lt;/p&gt;</description>
    </item>
    <item>
      <title>SignalR</title>
      <link>http://localhost:1313/post/2025-04-08-signalr/</link>
      <pubDate>Tue, 08 Apr 2025 00:00:00 +0000</pubDate><author>paolo.enrico@gmail.com (home)</author>
      <guid>http://localhost:1313/post/2025-04-08-signalr/</guid>
      <description>&lt;p&gt;This project utilizes SignalR to send real-time data to one or more clients via WebSockets. In this example, we are streaming data from a SQL Server database to clients..&lt;/p&gt;&#xA;&lt;p&gt;Instead of making a request/response paginated &amp;ldquo;Web API, we decided to use SignalR in this specific project and the Consumer handles the data received. It was applied into a massive data scenario, where we could inquire the database for all orders confirmed by the stock exchange to evaluate some specific scenarios.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Kafka</title>
      <link>http://localhost:1313/post/2025-03-16-kafka/</link>
      <pubDate>Sun, 16 Mar 2025 00:00:00 +0000</pubDate><author>paolo.enrico@gmail.com (home)</author>
      <guid>http://localhost:1313/post/2025-03-16-kafka/</guid>
      <description>&lt;p&gt;We were facing a challenge as a team to move a legacy application to a microservices architecture. The application was built using .NET and was running on a monolithic architecture. We decided to use &lt;a href=&#34;https://kafka.apache.org/&#34;&gt;Kafka&lt;/a&gt; as our message broker to decouple the services and allow for asynchronous communication between them.&lt;/p&gt;&#xA;&lt;p&gt;This application was responsible for retrieving millions of operations on a daily basis and to complete all calculations in a reasonable time for each associated office and financial advisors.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
