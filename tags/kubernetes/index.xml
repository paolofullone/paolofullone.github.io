<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kubernetes on Paolo Fullone</title>
    <link>https://paolofullone.github.io/tags/kubernetes/</link>
    <description>Recent content in Kubernetes on Paolo Fullone</description>
    <generator>Hugo</generator>
    <language>en</language>
    <managingEditor>paolo.enrico@gmail.com (home)</managingEditor>
    <webMaster>paolo.enrico@gmail.com (home)</webMaster>
    <lastBuildDate>Sat, 26 Apr 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://paolofullone.github.io/tags/kubernetes/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Health Checks</title>
      <link>https://paolofullone.github.io/post/2025-04-26-healthchecks/</link>
      <pubDate>Sat, 26 Apr 2025 00:00:00 +0000</pubDate><author>paolo.enrico@gmail.com (home)</author>
      <guid>https://paolofullone.github.io/post/2025-04-26-healthchecks/</guid>
      <description>&lt;p&gt;In a microservices architecture, ensuring each service communicates reliably with databases like SQL Server and Oracle is critical but challenging due to restricted permissions. Health checks monitor service health, and in this post, I focus on advanced checks that execute &lt;em&gt;custom queries&lt;/em&gt; to verify table access, beyond standard NuGet packages. I&amp;rsquo;ve learned to anticipate issues like permission errors, ensuring robust systems for global teams.&lt;/p&gt;&#xA;&lt;p&gt;I developed a &lt;code&gt;MultiDatabase&lt;/code&gt; health check to test specific queries across SQL Server and Oracle, addressing the challenge of limited database access rights that require DBA intervention (e.g., user creation, encrypted connection strings). This check integrates with CI/CD pipelines, catching issues before deployment, complementing my 95% test coverage in projects like RunningTracker.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Kafka for Microservices</title>
      <link>https://paolofullone.github.io/post/2025-03-16-kafka/</link>
      <pubDate>Sun, 16 Mar 2025 00:00:00 +0000</pubDate><author>paolo.enrico@gmail.com (home)</author>
      <guid>https://paolofullone.github.io/post/2025-03-16-kafka/</guid>
      <description>&lt;p&gt;I helped migrate a .NET monolith to microservices, processing 4-5 million daily operations for financial advisors. Using Kafka and Kubernetes, I streamlined complex commission rules. My 20+ years in procurement enabled me to align teams and deliver tough updates. Despite delays, my refactoring ensured cloud readiness.&lt;/p&gt;&#xA;&lt;p&gt;The application was built using .NET and was running on a &lt;strong&gt;monolithic architecture&lt;/strong&gt; on a Virtual Machine.&lt;/p&gt;&#xA;&lt;p&gt;We decided to use &lt;a href=&#34;https://kafka.apache.org/&#34;&gt;Kafka&lt;/a&gt; as our message broker to decouple the services and allow for asynchronous communication between them.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
