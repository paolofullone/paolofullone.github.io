<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Microservices on Paolo Fullone</title>
    <link>https://paolofullone.github.io/tags/microservices/</link>
    <description>Recent content in Microservices on Paolo Fullone</description>
    <generator>Hugo</generator>
    <language>en</language>
    <managingEditor>paolo.enrico@gmail.com (home)</managingEditor>
    <webMaster>paolo.enrico@gmail.com (home)</webMaster>
    <lastBuildDate>Sun, 16 Mar 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://paolofullone.github.io/tags/microservices/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Kafka for Microservices</title>
      <link>https://paolofullone.github.io/post/2025-03-16-kafka/</link>
      <pubDate>Sun, 16 Mar 2025 00:00:00 +0000</pubDate><author>paolo.enrico@gmail.com (home)</author>
      <guid>https://paolofullone.github.io/post/2025-03-16-kafka/</guid>
      <description>&lt;p&gt;I helped migrate a .NET monolith to microservices, processing 4-5 million daily operations for financial advisors. Using Kafka and Kubernetes, I streamlined complex commission rules. My 20+ years in procurement enabled me to align teams and deliver tough updates. Despite delays, my refactoring ensured cloud readiness.&lt;/p&gt;&#xA;&lt;p&gt;The application was built using .NET and was running on a &lt;strong&gt;monolithic architecture&lt;/strong&gt; on a Virtual Machine.&lt;/p&gt;&#xA;&lt;p&gt;We decided to use &lt;a href=&#34;https://kafka.apache.org/&#34;&gt;Kafka&lt;/a&gt; as our message broker to decouple the services and allow for asynchronous communication between them.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
